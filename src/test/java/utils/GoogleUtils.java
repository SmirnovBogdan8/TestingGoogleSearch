package utils;

import com.codeborne.selenide.Selenide;
import com.codeborne.selenide.Screenshots;
import org.junit.jupiter.api.Assertions;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

import static com.codeborne.selenide.Selenide.$;

public class GoogleUtils {
    private static final String SCREENSHOTS_DIR = "build/reports/tests/screenshots/";
    private static final int DEFAULT_WAIT_TIMEOUT = 3000;

    // –†–∞–±–æ—Ç–∞ —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏
    public static void initScreenshotsDir() {
        new File(SCREENSHOTS_DIR).mkdirs();
    }

    public static void takeScreenshot(String name) {
        try {
            File screenshot = Screenshots.takeScreenShotAsFile();
            File targetFile = new File(SCREENSHOTS_DIR + name + "_" + System.currentTimeMillis() + ".png");
            Assertions.assertNotNull(screenshot, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç");
            Files.copy(screenshot.toPath(), targetFile.toPath());
            System.out.println("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: " + targetFile.getAbsolutePath());
        } catch (IOException e) {
            System.err.println("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç: " + e.getMessage());
        }
    }

    // –†–∞–±–æ—Ç–∞ —Å —Ç–∞–π–º–µ—Ä–∞–º–∏
    public static void waitDefault() {
        Selenide.sleep(DEFAULT_WAIT_TIMEOUT);
    }

    public static void wait(int milliseconds) {
        Selenide.sleep(milliseconds);
    }

    // –†–∞–±–æ—Ç–∞ —Å –∫–∞–ø—á–µ–π
    public static void verifyCaptchaPassed() {
        boolean captchaShown = false;
        int maxAttempts = 10;
        int attempt = 0;

        while (attempt < maxAttempts) {
            attempt++;

            if ($("#captcha-form").exists() || $("iframe[src*='recaptcha']").exists()) {
                if (!captchaShown) {
                    System.out.println("‚ö† –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –µ—ë –≤—Ä—É—á–Ω—É—é.");
                    captchaShown = true;
                }
                wait(5000);
            }
            else if ($("#rso").exists()) {
                System.out.println("‚úÖ –ö–∞–ø—á–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ (–∏–ª–∏ –µ—ë –Ω–µ –±—ã–ª–æ). –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.");
                return;
            }
            else {
                System.out.println("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...");
                wait(3000);
            }
        }

        Assertions.fail("‚ùå –ö–∞–ø—á–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å");
    }
}